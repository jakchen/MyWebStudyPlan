IE9 以下版本浏览器兼容HTML5的方法，使用本站的静态资源的html5shiv包：
<!--[if lt IE9]>
<script src="http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js"></script>
<![endif]-->
html5shiv.js 引用代码必须放在 <head> 元素中，因为 IE 浏览器在解析 HTML5 新元素时需要先加载该文件。
载入后，初始化新标签的CSS：
/*html5*/
article,aside,dialog,footer,header,section,footer,nav,figure,menu{display:block}

HTML5新增的结构元素
  section、article、aside、header、hgrounp、footer、nav、figure
新增的其他元素
  video、audio、canvas
新增的input元素的类型
  email、url、number、range、Date Pickers
不再使用frame框架
新增的属性和废除的属性：
  表单相关的属性
  链接相关的属性
  其他属性
废除的属性：
全局属性：
  contentEditable属性 true可编辑
  designMode属性  整个页面是否可编辑
  hidden属性
  spellcheck属性
  tabindex属性  获得焦点
HTML5 新增的主体结构元素 ：
<article> 元素代表文档、页面或应用程序中独立的、完整的、可以独自被外部引用的内容。它可以是一篇博客或者报刊中的文章，一篇论坛帖子、一段用户评论或独立的插件，或其他任何独立的内容。
<article> 元素是可以嵌套使用的。
<article> 元素可以用来表示插件

Section元素用于对网站或应用程序中页面上的内容进行分块。一个section元素通常由内容及其标题组成。但section使用并非一个普通的容器元素；当一个容器需要被直接定义样式或通过脚本定义行为时，推荐使用div而非section元素。
通常不推荐没有标题内容使用section元素
1不要将section元素作为设置样式的页面容器
2如果article元素、aside元素、nav元素更符合使用条件，那不要使用section元素
3没有标题内容，不要使用section元素
nav元素是一个可以用作页面导航的连接组，其中的导航元素链接到其他页面或当前页面的其他部分。并不是使用的连接组都要被放进nav元素，只需要将主要的、基本的连接组放进nav元素即可。
nav元素应用场景：
传统导航条
侧边栏导航
页内导航
翻页操作

aside元素用来表示当前页面或文章的附属信息部分，它可以包含与当前页面或主要内容相关的引用、侧边栏、广告、导航条，以及其他类似的有区别于主要内容的部分。

time元素与微格式
<time> 标签定义日期或时间，或者两者。<time>9:00</time>
<time datetime="2008-02-14">情人节</time> datetime属性：定义元素的日期和时间。
pubdate属性：指示 <time> 元素中的日期 / 时间是文档（或最近的前辈 <article> 元素）的发布日期
HTML5 新增的非主体结构元素
header元素是一种具有引导和导航作用的结构元素，通常用来放置整个页面或页面内的一个内容区块的标题，但是也可以包含其他内容，例如数据表格、搜索表单或相关的logo图片。
header元素可以出现多次

footer元素可以作为其上层父级内容区块或是一个根区块的脚注。footer通常包括其相关的脚注信息，如作者、相关阅读链接及版权信息等。
提示：假如您使用 footer 来插入联系信息，应该在 footer 元素内使用 <address> 元素。

hgroup元素是将标题及其子标题进行分组的元素。hgroup元素通常会将h1~h6元素进行分组，譬如一个内容区块的标题及其子元素算一组。
标题较多，需要进行分组。

address元素用来在文档中呈现联系信息，包括文档作者或文档维护者的名字、他们的网站链接、电子邮箱、真实地址、电话号码等。Address应该不只用来呈现电子邮箱或真实地址，还用来展示根文档相关的联系人的所有联系信息。
HTML5结构，大纲编排的规则
1显示编排内容区域块 明确使用section等元素
2隐示编排内容区域块 不明确使用section
3标题分级
4不同区域块使用相同标题


HTML5 表单新增元素与属性:
  form 属性和 formaction 属性
表单内的从属元素必须书写在表单内部，而在 HTML5 中，可以把他们书写在页面上任何地方，然后为该元素指定一个 form 属性，属性值为该表单的 id，这样就可以声明该元素从属于指定表单了。

在HTML4中，一个表单内的所有元素只能通过表单的action属性被统一提交到另一个页面，而在HTML5中可以为所有的提交按钮，增加不同的formaction属性，使单击不同的按钮时可以将表单提交到不同的页面

  formmethod 和 formenctype 属性
在HTML4中，一个表单内只能有一个action属性用来对表单内所有元素统一指定提交页面，所有表单内页只有一个method属性来统一指定提交方法。在HTML5中，可以使用formmethod属性来对每一个表单元素分别指定不同的提交方法。

在HTML4中，表单元素具有一个enctype属性，改属性用于指定在表单发送到服务器之前应该如何对表单内的数据进行编码。
在HTML5中，可以使用formenctype属性对表单元素分别指定不同的编码方式。
  formenctype="text/plain" 将空格转换为 "+" 符号，但不编码特殊字符。
  formenctype="multipart/form-data" 不对字符编码。当使用有文件上传控件的表单时，该值是必需的。
  application/x-www-form-urlencoded 在发送前对所有字符进行编码（默认）。

  formtarget 属性和 autofocus 属性
在HTML4中，表单元素具有一个target属性，该属性用于指定在何处打开表单提交后所需要加载的页面。
在HTML5中，可以对多个提交按钮分别使用formtarget属性来指定提交后在何处打开所需加载的页面。

为文本框、选择框或按钮控件加上autofocus属性，当画面打开时，该控件自动获得光标焦点。<input type="text" autofocus>

  required 属性和 labels 属性
HTML5中新增的required属性可以应用在大多数输入元素上，在提交时，如果元素中内容为空白，则不允许提交，同时在浏览器中显示信息提示文字。required="required"

在HTML5,为所有可使用标签的表单元素、button、select元素等，定义一个labels属性，属性值为一个NodeList对象，代表该元素所绑定的标签元素所构成的集合。
<label> 标签为 input 元素定义标签（label）。
label 元素不会向用户呈现任何特殊的样式。不过，它为鼠标用户改善了可用性，因为如果用户点击 label 元素内的文本，则会切换到控件本身。
<label> 标签的 for 属性应该等于相关元素的 id 元素，以便将它们捆绑起来。

标签的control属性
在HTML5中，可以在标签内部放置一个表单元素，并且通过该标签的control属性来访问该表单元素

文本框的placeholder属性
Placeholder是指当文本框处于未输入状态时显示的输入提示。当文本框处于未输入状态且未获取光标焦点时，模糊显示输入提示文字。

文本框的list属性
在HTML5中，为单行文本框增加了一个list属性，该属性的值为某个datalist元素的id。datalist元素也是HTML5中新增的元素，该元素类似于选择框，但是当用户想要设定的值不在选择列表之内时，允许自行输入。datalist元素本身并不显示，而是当文本框获得焦点时以提示输入的方式显示。<datalist><option value="http://www.google.com" > http://www.google.com </option></ datalist >

文本框的autocomplete属性
帮助输入所用的自动完成功能，是一个既节省输入时间又十分方便的功能。在HTML5之前，因为谁都可以看见输入的值，所以在安全方面存在缺陷，只要使用autocomplete属性，安全性方面也可以得到很好的控制。
Autocomplete = “on” 默认。规定启用自动完成功能。
Autocomplete = “off规定禁用自动完成功能。
”
文本框的pattern属性
在HTML5中，对input元素使用pattern属性，并且将属性值设为某个格式的正则表达式，在提交时会针对这些进行检查，检查其内容是否符合给定格式。当输入的内容不符合给定格式时，则不允许提交，同时在浏览器中显示信息提示文字，提示输入的内容必须符合给定格式。

文本框的selectiondirection属性
这对input元素与textarea元素，HTML5增加了selectiondirection属性。当用户在这两个元素中用鼠标选取部分文字时，可以使用该属性来获取选取方向。当用户正向选取文字时，该属性值为”forward”，当用户反向选取文字时，该属性值为”backward”。当用户没有选取任何文字时，该属性值为”forward”。

复选框的indeterminate属性
对于复选框checkbox元素来说，过去只是选取与非选取这两种状态。在HTML5中。可以在JavaScript脚本代码中对该元素使用indeterminate属性，以说明复选框处于“尚未明确是否选取”状态。Checkbox.indeterminate = true;

image提交按钮的height属性与width属性
针对类型为image的input元素，HTML5新增了两个属性，height、width分别用来指定图片按钮的高度和宽度。
HTML5 改良的 input 元素的种类
增加与改良的input元素
1、  url类型、email类型、date类型、time类型、datetime类型、datetime-local类型、month类型、week类型、number类型、range类型、search类型、tel类型、color类型
<input type="number" value="15" min="10" max="100" step="5">
output元素:
<script>
function value_change(){
  var number = document.getElementById("range").value;
  document.getElementById("output").value=number;
}
</script>
<input type="range" id="range" min="0" max="100" step="5" value="10" onchange="value_change()">
<output id="output">10</output>
表单验证：

HTML5 增强的页面元素：
<figure> 标签用于对元素进行组合。提示：请使用 <figcaption> 元素为元素组添加标题。

<details> 标签用于描述文档或文档某个部分的细节。提示：与 <summary> 标签配合使用可以为 details 定义标题。标题是可见的，用户点击标题时，会显示出 details。注释：details 元素可用于描述文档的任何部分。

<mark> 标签定义带有记号的文本。请在需要突出显示文本时使用 <m> 标签。

progress元素和meter元素
正在进行的下载：
提示：请结合 <progress> 标签与 JavaScript 一同使用，来显示任务的进度。
注释：Internet Explorer 9 以及更早的版本不支持 <progress> 标签。
<meter> 标签定义度量衡。仅用于已知最大和最小值的度量。

ol、dl、cite、small

HTML5编辑API之Range对象:
Range对象基本概念
一个range对象代表页面上的一段连续区域。通过range对象，可以获取或修改网页上的任何区域。
可以通过如下创建一个空的Range对象，如下：var  range = document.createRange();

在html5中，每一个浏览器窗口及每一个窗口中都有一个selection对象，代表用户鼠标在页面中所选取的区域，(注意：经过测试IE9以下的浏览器不支持Selection对象), 可以通过如下语句创建selection对象；
   var  selection = document.getSelection();     或者
   var  selection  = window.getSelection();

每一个selection对象都有一个或者多个Range对象，每一个range对象代表用户鼠标所选取范围内的一段连续区域，在firefox中，可以通过ctrl键可以选取多个连续的区域，因此在firefox中一个selection对象有多个range对象，在其他浏览器中，用户只能选取一段连续的区域，因此只有一个range对象。

可以通过selection对象的getRangeAt方法来获取selection对象的某个Range对象，如下： var range = document.getSelection().getRangeAt(index);
getRangeAt方法有一个参数index，代表该Range对象的序列号；我们可以通过Selection对象的rangeCount参数的值判断用户是否选取了内容；
1.当用户没有按下鼠标时候，该参数的值为0.
2.当用户按下鼠标的时候，该参数值为1.
3.当用户使用鼠标同时按住ctrl键时选取了一个或者多个区域时候，该参数值代表用户选取区域的数量。
4.当用户取消区域的选取时，该属性值为1，代表页面上存在一个空的Range对象；

SelectNode、SelectNodeContents、deleteContents方法
crenteRange()创建一个Range对象
  selectNode(div)选取整个div元素
  selectNodeContents(div)选取div内的内容
  deleteContents()删除
selectNode方法：Range对象的selectNode方法用于将Range对象的起点指定为某个节点的起点，将Range对象的终点指定为该节点的终点，使Range对象所代表的区域中包含该节点。使用方法如下：
rangeObj.selectNode(node);
上面的rangeObj代表一个Range对象，该方法使用一个参数，代表页面中的一个节点。

selectNodeContents方法：用于将Range对象的起点指定为某个节点中的所有内容的起点，将Range对象的终点指定为该节点所有内容的终点，使Range对象所代表的区域中包含该节点的所有内容。使用方法如下：
rangeObj.selectNodeContents(node);
含义如上所示;

deleteContents方法：用于将Range对象中所包含的内容从页面中删除，使用方法如下所示：
rangeObj.deleteContents();

setStart、setEnd、setStartBefore、setStartAfter、setEenBefore、setEndAfter方法
setStart方法 用于将某个节点中的某处位置指定为Range对象所代表区域的起点位置，使用方法如下：
rangeObj.setStart(node,curIndex);
如上代码rangeObj代表一个Range对象，该setStart方法使用2个参数，第一个参数node代表一个节点，第二个参数是一个数字，当第一个参数node所代表的节点是一个内容为一段文字的文字节点时，该参数值用于指定将第几个文字的结束位置作为Range对象所代表的区域的起点位置；当第一个参数node所代表的节点中包括其他子节点时，该参数值用于将第几个子节点的结束位置指定为Range对象所代表的区域的起点位置；

setEnd方法  用于将某个节点中的某处位置指定Range对象所代表区域的结束位置。使用方法如下所示：
rangeObj.setEnd(node,curIndex);
该方法中的2个参数的含义如setStart方法中参数的含义相同；只不过一个是起点位置，另一个是结束位置；

setStartBefore方法：用于将某个节点的起点位置指定为Range对象所代表区域的起点位置。

setStartAfter方法： 用于将某个节点的终点位置指定为Range对象所代表区域的起点位置。

setEndBefore方法： 用于将某个节点的起点位置指定为Range对象所代表区域的终点位置。

setEndAfter方法：  用于将某个节点的终点位置指定为Range对象所代表区域的终点位置。

cloneRange
cloneRange方法  Range对象的cloneRange方法用于对当前的Range对象进行复制，该方法返回复制的Range对象，rangeObj.cloneRange()

cloneContents
 该方法用于在页面上追加一段HTML代码，并且将Range对象所代表区域中的HTML代码克隆到被追加的html代码中；

extractContents
extractContents方法 用于将Range对象所代表区域中的html代码克隆到一个DocumentFragment对象中，然后从页面中删除这段HTML代码；

insertNode
该方法用于将指定的节点插入到某个Range对象所代表的区域中，插入位置为Range对象所代表区域的起点位置，如果该节点已经存在于页面中，该节点将被移动到Range对象代表的区域的起点处。

compareBoundaryPoints

collapse
rangeObj.collapse(false);取消range对象区域

detach
rangeObj.detach()释放Range对象，释放后其他事件就不成立了，主要用于释放Range对象来提升应用的性能。

HTML5音频播放
1、Audio音频
  HTML5提供了播放音频文件的标准
2、control控制器
  control属性供添加播放、暂停和音量控件
3、标签：
  <audio>定义声音
  <source>规定多媒体资源，可以是多个

编解码工具：mp4-ogg
FFmpeg
官网:www.ffmpeg.org

视频播放
1、Video视频
  HTML5提供了播放音频文件的标准
2、control控制器
  control属性供添加播放、暂停和音量控件
3、标签：
  <video>定义声音
  <source>规定多媒体资源，可以是多个
4、属性
  width
  height

HMTL5拖放:
1、HTML5拖放：
  拖放(Drag和drop)是HTML5标准的组成部分
2、拖放开始：
  ondragstart：调用了一个函数，drag(event)，它规定了被拖放的数据
3、设置拖动数据：
  setData()：设置被拖数据的数据类型和值
4、放入位置：
  ondragover：事件规定在何处放置被拖动的数据
5、放置：
  ondrop：当放置被拖数据时，会发生drop事件

Canvas标签
HTML5 <canvas> 元素用于图形的绘制，通过脚本 (通常是JavaScript)来完成.
<canvas> 标签只是图形容器，您必须使用脚本来绘制图形。
你可以通过多种方法使用Canva绘制路径,盒、圆、字符以及添加图像。

https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D

绘制图形：
mycanvas = document.getElementById("mycanvas");
context = mycanvas.getContext("2d");
context.fillStyle = "#F00";//颜色
// context.rotate(45);//旋转
// context.translate(200,200);//移动
// context.scale(2,0.5);//缩放
context.fillRect(0,0,100,100);//绘制矩形

绘制图像：
function drawImage(){
  var img = new Image();
  img.onload = function (){
    context.drawImage(img,10,0);
  }
  img.src="1.jpg"
}

HTML5使用路径:
绘制圆形：
  在canvas中绘制圆形, 我们将使用以下方法:
  context.arc(x,y,r,sAngle,eAngle,counterclockwise);
  x 圆的中心的 x 坐标。
  y 圆的中心的 y 坐标。
  r 圆的半径。
  sAngle 起始角，以弧度计。（弧的圆形的三点钟位置是 0 度）。
  eAngle 结束角，以弧度计。
  counterclockwise 可选。规定应该逆时针还是顺时针绘图。False = 顺时针，true = 逆时针
  提示：如需通过 arc() 来创建圆，请把起始角设置为 0，结束角设置为 2*Math.PI。
  提示：请使用 stroke() 或 fill() 方法在画布上绘制实际的弧。

move To与line To
  在Canvas上画线，我们将使用以下两种方法：
    moveTo(x,y) 定义线条开始坐标
    lineTo(x,y) 定义线条结束坐标

使用bezierCurseTo绘制贝赛尔曲线
CanvasRenderingContext2D.bezierCurveTo()
添加一个3次贝赛尔曲线路径。该方法需要三个点。 第一、第二个点是控制点，第三个点是结束点。起始点是当前路径的最后一个点，绘制贝赛尔曲线前，可以通过调用 moveTo() 进行修改。


HTML5 定了 8 个新的 HTML 语义（semantic） 元素。所有这些元素都是 块级 元素。
为了能让旧版本的浏览器正确显示这些元素，你可以设置 CSS 的 display 属性值为 block:
header, section, footer, aside, nav, main, article, figure {
    display: block;
}

<canvas> 标签定义图形，比如图表和其他图像，您必须使用脚本来绘制图形。
什么是 Canvas?
HTML5 <canvas> 元素用于图形的绘制，通过脚本 (通常是JavaScript)来完成.
<canvas> 标签只是图形容器，您必须使用脚本来绘制图形。
你可以通过多种方法使用Canva绘制路径,盒、圆、字符以及添加图像。
