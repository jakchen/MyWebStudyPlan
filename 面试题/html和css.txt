1. 常用那几种浏览器测试？有哪些内核(Layout Engine)?
(Q1)浏览器：IE，Chrome，FireFox，Safari，Opera。
(Q2)内核：Trident，Gecko，Presto，Webkit。

说下行内元素和块级元素的区别？行内块元素的兼容性使用？（IE8 以下）
(Q1)行内元素：会在水平方向排列，不能包含块级元素，设置width无效，height无效(可以设置line-height)，margin上下无效，padding上下无效。 块级元素：各占据一行，垂直方向排列。从新行开始结束接着一个断行。
(Q2)兼容性：display:inline-block;*display:inline;*zoom:1;

清除浮动有哪些方式？比较好的方式是哪一种？
（1）父级div定义height。
（2）结尾处加空div标签clear:both。
（3）父级div定义伪类:after和zoom。
（4）父级div定义overflow:hidden。
（5）父级div定义overflow:auto。
（6）父级div也浮动，需要定义宽度。
（7）父级div定义display:table。
（8）结尾处加br标签clear:both。

box-sizing常用的属性有哪些？分别有什么作用？
(Q1)box-sizing: content-box|border-box|inherit;
(Q2)content-box:宽度和高度分别应用到元素的内容框。在宽度和高度之外绘制元素的内边距和边框(元素默认效果)。
border-box:元素指定的任何内边距和边框都将在已设定的宽度和高度内进行绘制。通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度。

Doctype作用？标准模式与兼容模式各有什么区别?
(Q1)<!DOCTYPE>告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。
(Q2)标准模式的排版和JS运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作。

HTML5 为什么只需要写 <!DOCTYPE HTML>？
HTML5不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行）。
而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。

页面导入样式时，使用link和@import有什么区别？
（1）link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS;
（2）页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;
（3）import是CSS2.1 提出的，只在IE5以上才能被识别，而link是XHTML标签，无兼容问题;

介绍一下你对浏览器内核的理解？
主要分成两部分：渲染引擎(layout engineer或Rendering Engine)和JS引擎。
渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。
JS引擎则：解析和执行javascript来实现网页的动态效果。
最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。

html5有哪些新特性？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？
HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。

(1)绘画 canvas;
(2)用于媒介回放的 video 和 audio 元素;
(3)本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失;
(4)sessionStorage 的数据在浏览器关闭后自动删除;
(5)语意化更好的内容元素，比如 article、footer、header、nav、section;
(6)表单控件，calendar、date、time、email、url、search;
(7)新的技术webworker, websocket, Geolocation;
IE8/IE7/IE6支持通过document.createElement方法产生的标签，可以利用这一特性让这些浏览器支持HTML5新标签，浏览器支持新标签后，还需要添加标签默认的样式。当然也可以直接使用成熟的框架、比如html5shim;

<!--[if lt IE 9]>
<script> src="http://html5shim.googlecode.com/svn/trunk/html5.js"</script>
<![endif]-->

简述一下你对HTML语义化的理解？
用正确的标签做正确的事情。
html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;
即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;
搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;
使阅读源代码的人对网站更容易将网站分块


　1.对WEB标准以及W3C的理解与认识
　　标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外链css和js脚本、结构行为表现的分离、文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，容易维护、改版方便，不需要变动页面内容、提供打印版本而不需要复制内容、提高网站易用性;
　　2.xhtml和html有什么区别
　　HTML是一种基本的WEB网页设计语言，XHTML是一个基于XML的置标语言
　　最主要的不同：
　　XHTML 元素必须被正确地嵌套。
　　XHTML 元素必须被关闭。
　　标签名必须用小写字母。
　　XHTML 文档必须拥有根元素。
　　3.Doctype? 严格模式与混杂模式-如何触发这两种模式，区分它们有何意义?
　　用于声明文档使用那种规范(html/Xhtml)一般为 严格 过度 基于框架的html文档
　　加入XMl声明可触发，解析方式更改为IE5.5 拥有IE5.5的bug
　　4.行内元素有哪些?块级元素有哪些?CSS的盒模型?
　　块级元素：div p h1 h2 h3 h4 form ul
　　行内元素: a b br i span input select
　　Css盒模型:内容，border ,margin，padding
　　5.CSS引入的方式有哪些? link和@import的区别是?
　　内联 内嵌 外链 导入
　　区别 ：同时加载
　　前者无兼容性，后者CSS2.1以下浏览器不支持
　　Link 支持使用javascript改变样式，后者不可
　　6.CSS选择符有哪些?哪些属性可以继承?优先级算法如何计算?内联和important哪个优先级高?
　　标签选择符 类选择符 id选择符
　　继承不如指定 Id>class>标签选择
　　后者优先级高
　　7.前端页面有哪三层构成，分别是什么?作用是什么?
　　结构层 Html 表示层 CSS 行为层 js
　　8.css的基本语句构成是?
　　选择器{属性1:值1;属性2:值2;……}
　　9.你做的页面在哪些流览器测试过?这些浏览器的内核分别是什么?
　　Ie(Ie内核) 火狐(Gecko) 谷歌(webkit) opear(Presto)
　　10.写出几种IE6 BUG的解决方法
　　1.双边距BUG float引起的 使用display
　　2.3像素问题 使用float引起的 使用dislpay:inline -3px
　　3.超链接hover 点击后失效 使用正确的书写顺序 link visited hover active
　　4.Ie z-index问题 给父级添加position:relative
　　5.Png 透明 使用js代码 改
　　6.Min-height 最小高度 !Important 解决’
　　7.select 在ie6下遮盖 使用iframe嵌套
　　8.为什么没有办法定义1px左右的宽度容器(IE6默认的行高造成的，使用over:hidden,zoom:0.08 line-height:1px)
　　9.ie 6 不支持!important
　　11.img标签上title与alt属性的区别是什么?
　　Alt 当图片不显示是 用文字代表。
　　Title 为该属性提供信息
　　12.描述css reset的作用和用途。
　　Reset重置浏览器的css默认属性 浏览器的品种不同，样式不同，然后重置，让他们统一
　　13.解释css sprites，如何使用。
　　Css 精灵 把一堆小的图片整合到一张大的图片上，减轻服务器对图片的请求数量
　　14.浏览器标准模式和怪异模式之间的区别是什么?
　　盒子模型 渲染模式的不同
　　使用 window.top.document.compatMode 可显示为什么模式
　　15.你如何对网站的文件和资源进行优化?期待的解决方案包括：
　　文件合并
　　文件最小化/文件压缩
　　使用CDN托管
　　缓存的使用
　　16.什么是语义化的HTML?
　　直观的认识标签 对于搜索引擎的抓取有好处
　　17.清除浮动的几种方式，各自的优缺点
　　1.使用空标签清除浮动 clear:both(理论上能清楚任何标签，，，增加无意义的标签)
　　2.使用overflow:auto(空标签元素清除浮动而不得不增加无意代码的弊端,,使用zoom:1用于兼容IE)
　　3.是用afert伪元素清除浮动(用于非IE浏览器)
　　18.css hack
　　<!--[if IE 6]--><![end if]-->
　　_marging \\IE 6
　　+margin \\IE 7
　　Marging:0 auto \9 所有Ie
　　Margin \0 \\IE 8